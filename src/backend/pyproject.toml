[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "azure-devops-ai-agent-backend"
version = "1.0.0"
description = "Backend API for Azure DevOps AI Agent with Entra ID authentication"
readme = "../../README.md"
license = {file = "../../LICENSE"}
authors = [
    {name = "Christopher House"}
]
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # FastAPI Backend Dependencies
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    
    # Authentication
    "python-jose[cryptography]>=3.3.0",
    "cryptography>=42.0.0",
    "python-multipart>=0.0.6",
    
    # Azure SDK and Authentication
    "azure-identity>=1.15.0",
    "msal>=1.25.0",
    
    # OpenTelemetry
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-instrumentation-requests>=0.42b0",
    "azure-monitor-opentelemetry>=1.3.0",
    
    # HTTP Client
    "httpx>=0.25.0",
    
    # Logging and Configuration
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    # Development dependencies
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "bandit>=1.7.0",
    "httpx>=0.25.0",
]

[dependency-groups]
dev = [
    # Development dependencies
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "bandit>=1.7.0",
    "httpx>=0.25.0",
]

[project.urls]
Homepage = "https://github.com/christopherhouse/Azure-DevOps-AI-Agent"
Repository = "https://github.com/christopherhouse/Azure-DevOps-AI-Agent"
Issues = "https://github.com/christopherhouse/Azure-DevOps-AI-Agent/issues"

# Tool configurations
[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "azure.*",
    "msal.*",
    "jose.*",
    "opentelemetry.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=90",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]
asyncio_mode = "auto"

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B104", "B106"]

[tool.hatch.build.targets.wheel]
packages = ["app"]